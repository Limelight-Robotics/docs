---
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Sidebar from '../../components/Sidebar.astro';
import Footer from '../../components/Footer.astro';
import { getCollection } from 'astro:content';

const guides = await getCollection('guides');
---

<Layout title="Guides - Limelight Robotics">
  <div class="min-h-screen flex flex-col">
    <Header />
    
    <div class="flex-1 flex">
      <Sidebar />
      
      <main class="flex-1 px-6 py-8 lg:px-8">
        <div class="max-w-4xl">
          <div class="mb-8">
            <h1 class="text-4xl font-bold text-gray-100 mb-4">Guides</h1>
            <p class="text-lg text-gray-300">
              Step-by-step tutorials and how-to guides to help you learn and contribute to our robotics projects.
            </p>
          </div>

          <div class="grid grid-cols-1 sm:grid-cols-1 md:grid-cols-2 gap-4 sm:gap-6">
            {guides.map((guide) => (
              <a 
                href={`/guides/${guide.slug}`}
                class="block p-4 sm:p-6 bg-gray-800 rounded-lg border border-gray-700 hover:border-lime-400 hover:shadow-md transition-all w-full"
              >
                <div class="flex flex-col space-y-3 w-full">
                  <h3 class="text-lg font-semibold text-gray-100 leading-tight">
                    {guide.data.title}
                  </h3>
                  {guide.data.difficulty && (
                    <div class="flex">
                      <span class={`px-2 py-1 rounded text-xs font-medium ${
                        guide.data.difficulty === 'beginner' ? 'bg-green-800 text-green-200' :
                        guide.data.difficulty === 'intermediate' ? 'bg-yellow-800 text-yellow-200' :
                        'bg-red-800 text-red-200'
                      }`}>
                        {guide.data.difficulty}
                      </span>
                    </div>
                  )}
                
                  {guide.data.description && (
                    <p class="text-gray-300 text-sm leading-relaxed">
                      {guide.data.description}
                    </p>
                  )}

                  <div class="flex flex-col space-y-2">
                    {guide.data.estimatedTime && (
                      <div class="text-xs text-gray-400">
                        <span>⏱️ {guide.data.estimatedTime}</span>
                      </div>
                    )}
                    {guide.data.tags && guide.data.tags.length > 0 && (
                      <div class="flex gap-1 flex-wrap">
                        {guide.data.tags.slice(0, 2).map((tag) => (
                          <span class="bg-gray-700 text-gray-200 px-2 py-1 rounded text-xs">
                            {tag}
                          </span>
                        ))}
                        {guide.data.tags.length > 2 && (
                          <span class="text-gray-500 text-xs">+{guide.data.tags.length - 2}</span>
                        )}
                      </div>
                    )}
                  </div>
                </div>
              </a>
            ))}
          </div>
        </div>
      </main>
    </div>
    
    <Footer />
  </div>
</Layout>
